#include<bits/stdc++.h>
using namespace std;

short mtx[4][5] = {0};
short i_shift[] = { 1,  1, -1, -1, 2, -2,  2, -2 };
short j_shift[] = { 2, -2,  2, -2, 1,  1, -1, -1 };
short counter = 0;

void dfs(short row, short col, short pos)
{
    if(pos == 20)
    {
        for(short i = 0; i < 4; i++)
        {
            for(short j = 0; j < 5; j++)
            {
                cout <<mtx[i][j] <<" ";
            }
        }
        cout <<endl;
        counter++;
    }

    for(short i = 0; i < 8; i++)
    {
        short new_i = row + i_shift[i];
        short new_j = col + j_shift[i];
        if(new_i >= 0 && new_i < 4 && new_j >= 0 && new_j < 5 && mtx[new_i][new_j] == 0)
        {
            mtx[new_i][new_j] = pos + 1;
            dfs(new_i, new_j, pos + 1);
            mtx[new_i][new_j] = 0;
        }
    }
}

int main()
{
    ios_base::sync_with_stdio(false);

    for(int i = 0; i < 4; i++)
    {
        for (int j = 0; j < 5; j++)
        {
            mtx[i][j] = 1;
            dfs(i, j, 1);
            mtx[i][j] = 0;
        }
    }
    cout <<"counter " <<counter <<endl;
}
/*
32
1 12 7 16 3 6 17 2 11 8 13 10 19 4 15 18 5 14 9 20
1 20 7 16 3 6 15 2 11 8 19 10 13 4 17 14 5 18 9 12
1 14 7 18 3 6 19 2 11 8 15 10 13 4 17 20 5 16 9 12
1 14 7 18 3 6 19 2 13 10 15 8 11 4 17 20 5 16 9 12
1 18 7 14 3 6 13 2 19 10 17 8 11 4 15 12 5 16 9 20
1 14 5 20 9 6 19 10 15 4 13 2 17 8 11 18 7 12 3 16
1 14 5 18 9 6 19 10 15 4 13 2 17 8 11 20 7 12 3 16
1 16 5 12 9 6 13 10 17 4 15 2 19 8 11 20 7 14 3 18
1 18 5 12 9 6 13 10 17 4 19 2 15 8 11 14 7 20 3 16
1 20 5 12 9 6 13 10 17 4 19 2 15 8 11 14 7 18 3 16
1 16 5 12 9 6 13 10 19 4 17 2 15 8 11 14 7 18 3 20
1 16 5 12 9 6 19 10 15 4 17 2 13 8 11 20 7 18 3 14
1 18 5 12 9 6 15 10 19 4 17 2 13 8 11 14 7 16 3 20
1 20 5 14 9 6 15 10 19 4 11 2 17 8 13 16 7 12 3 18
1 18 5 14 9 6 15 10 19 4 11 2 17 8 13 16 7 12 3 20
1 12 5 18 9 6 17 10 13 4 11 2 15 8 19 16 7 20 3 14
1 12 5 20 9 6 17 10 13 4 11 2 15 8 19 16 7 18 3 14
1 12 5 16 9 6 19 10 13 4 11 2 15 8 17 20 7 18 3 14
1 12 5 16 9 6 17 10 13 4 11 2 19 8 15 18 7 14 3 20
1 12 5 18 9 6 19 10 15 4 11 2 13 8 17 20 7 16 3 14
1 12 5 16 9 6 15 10 19 4 11 2 13 8 17 14 7 18 3 20
1 16 5 12 9 6 11 8 17 4 15 2 19 10 13 20 7 14 3 18
1 16 5 20 9 6 11 8 15 4 17 2 13 10 19 12 7 18 3 14
1 18 5 14 9 6 11 8 19 4 17 2 13 10 15 12 7 16 3 20
1 14 5 18 7 10 19 8 13 4 15 2 11 6 17 20 9 16 3 12
1 18 5 14 7 10 13 8 19 4 17 2 11 6 15 12 9 16 3 20
1 14 9 18 5 8 19 4 13 10 15 2 11 6 17 20 7 16 3 12
1 18 9 14 5 8 13 4 19 10 17 2 11 6 15 12 7 16 3 20
1 14 3 18 7 10 19 6 13 4 15 2 11 8 17 20 9 16 5 12
1 18 3 14 7 10 13 6 19 4 17 2 11 8 15 12 9 16 5 20
1 14 3 18 7 4 19 8 13 10 15 2 11 6 17 20 5 16 9 12
1 18 3 14 7 4 13 8 19 10 17 2 11 6 15 12 5 16 9 20
*/
